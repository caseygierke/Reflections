What happens when you initialize a repository? Why do you need to do it?
	It makes a hidden .git folder to store files in.  Because it is not a repository until this happens.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	It is temporary. It gives you a way to visual what you are thinking about doing

How can you use the staging area to make sure you have one commit per logical
change?
	You can easily compare the changes between your staging area and the 
	working directory and/or your repositories.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Experimental changes or trial features being added.  For me, I think I 
	will use this when I adapt codes to produce different outputs. 

How do the diagrams help you visualize the branch structure?
	They give you a visual history and show what branches connect and how.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result is the changes of both branches are incorporated into one
	version.  It is represented the way that it is because after merging,
	there are no longer 2 branches but one branch with 2 paths.  

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	It handles unique changes without hassle or attention.